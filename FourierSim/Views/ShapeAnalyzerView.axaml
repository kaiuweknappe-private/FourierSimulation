<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:FourierSim.ViewModels"
             xmlns:controls="clr-namespace:FourierSim.Controls"
             xmlns:behaviors="clr-namespace:FourierSim.Behaviors"
             xmlns:icons="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="FourierSim.Views.ShapeAnalyzerView"
             x:DataType="vm:ShapeAnalyzerViewModel">
    
    <ScrollViewer>
        <StackPanel>
            <Grid ColumnDefinitions="*, *" >
                <StackPanel Grid.Column="0" Margin="5">
                    <Grid >
                        <!--Note: in hindsight i would have maybe encapsulated the following canvas with its functionality into a custom control. I learned about Behaviors this way, though-->
                        <Canvas Height="600" Background="Beige" > 
                            <Polyline Points="{Binding Points}"
                                      Stroke="Blue"
                                      StrokeThickness="2" 
                                      IsVisible="{Binding IsDrawingVisible}" />
                            
                            <controls:PointCollectionControl Points="{Binding ResampledPoints}" IsVisible="{Binding IsResampleVisible}" PointBrush="Red" PointSize="4" />
                            
                            <Interaction.Behaviors>
                                <behaviors:CanvasDrawingHandler
                                    StartCommand="{Binding StartDrawingCommand}"
                                    MoveCommand="{Binding UpdateDrawingCommand}"
                                    StopCommand="{Binding FinishDrawingCommand}" />
                            </Interaction.Behaviors>
                        </Canvas>
                    </Grid>
                    <Border BorderThickness="3" BorderBrush="Beige" Padding="10" Background="Gray" Height="190">
                        <Grid ColumnDefinitions="*,*">
                            <Grid Grid.Column="0" RowDefinitions="*,*,*">
                                <Button Grid.Row="0" Command="{Binding ResetCommand}">
                                    <icons:Icon Value="fa-solid fa-trash" FontSize="16"/>
                                </Button>
                                <CheckBox Grid.Row="1" Classes="VisibilityToggle" IsChecked="{Binding IsDrawingVisible}" Content="Show Drawing"/>
                                <CheckBox Grid.Row="2" Classes="VisibilityToggle" IsChecked="{Binding IsResampleVisible}" Content="Show Resampled Points"/>
                            </Grid>
                            <DockPanel Grid.Column="1">
                                <Label DockPanel.Dock="Top" HorizontalAlignment="Center" Content="{Binding SampleDensity, StringFormat='Sample Density: {0:F2}'}"/>
                                <StackPanel DockPanel.Dock="Bottom" Margin="10">
                                    <Label HorizontalAlignment="Center" Content="{Binding LoopLength, StringFormat='Length: {0:F2}'}"/>
                                    <Label HorizontalAlignment="Center" Content="{Binding SampleCount, StringFormat='Sample Frequency: {0} hz'}" />
                                    <Label HorizontalAlignment="Center" Content="{Binding NyquistShannonFrequency, StringFormat='Nyquist-Shannon Frequency: |{0}| hz'}" />
                                </StackPanel>
                                <Slider Minimum="0.01" Maximum="1" TickFrequency="0.01" IsSnapToTickEnabled="True" Value="{Binding SampleDensity}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                </StackPanel>
                
                <StackPanel Grid.Column="1" Margin="5">
                    <controls:PhasorAnimationControl Height="600" ClipToBounds="True" PhasorVisibility="{Binding PhasorVisibility}"
                                                     SimulationStepSize="{Binding SimulationStepSize}" 
                                                     Phasors="{Binding AnimationPhasors}" 
                                                     TimeFactor="{Binding TimeFactor}" 
                                                     SelectedFrequency="{Binding SelectedFrequency}"
                                                     TimeOffset="{Binding TimeSelection}"
                                                     IsRunning="{Binding IsAnimationRunning}"/> 
                    <Border BorderThickness="3" BorderBrush="Beige" Padding="10,0" Background="Gray" Height="190">
                            <Grid ColumnDefinitions="*,10,*">
                                <StackPanel Grid.Column="0" HorizontalAlignment="Stretch">
                                    <DockPanel >
                                        <ToggleButton DockPanel.Dock="Left" IsEnabled="{Binding IsManuallySettingTime, Converter={StaticResource BoolInverterConverter}}" Width="60" Height="40" Margin="0,0,10,0" IsChecked="{Binding IsAnimationRunning}" HorizontalAlignment="Center">
                                            <Grid>
                                                <icons:Icon FontSize="20" Value="fa-solid fa-play" IsVisible="{Binding IsAnimationRunning, Converter={StaticResource BoolInverterConverter}}" />
                                                <icons:Icon FontSize="20" Value="fa-solid fa-pause" IsVisible="{Binding IsAnimationRunning}" />
                                            </Grid>
                                        </ToggleButton>
                                        <CheckBox Classes="VisibilityToggle" IsChecked="{Binding PhasorVisibility}"/>
                                        <Label DockPanel.Dock="Left" VerticalAlignment="Center" Content="{Binding TimeFactor, StringFormat='Speed: {0:F2}x'}"/>
                                        <Slider Minimum="0.01" Maximum="2" TickFrequency="0.01" IsSnapToTickEnabled="True" Value="{Binding TimeFactor}"  Margin="7,0"/>
                                    </DockPanel> 
                                    <Border Background="DimGray" BorderBrush="Black" BorderThickness="2" Padding="10,0">
                                        <DockPanel>
                                            <CheckBox DockPanel.Dock="Left" IsChecked="{Binding IsManuallySettingTime}" VerticalAlignment="Center"/>
                                            <Label DockPanel.Dock="Left" Content="{Binding AnimationProgress}" VerticalAlignment="Center" MinWidth="60" HorizontalContentAlignment="Center"/>
                                            <Slider Minimum="0" Maximum="1000" IsSnapToTickEnabled="True" TickFrequency="1" Value="{Binding TimeSelection}" IsEnabled="{Binding IsManuallySettingTime}"/>
                                        </DockPanel>
                                    </Border>
                                    <Label Content="Animation Interval: 16 ms" HorizontalAlignment="Center" Margin="0,5"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Label Content="{Binding SimulationStepSize, StringFormat='Simulation Interval: {0} ms'}" />
                                        <Border Margin="10,0,0,0" Padding="1" BorderBrush="LightGray" BorderThickness="2" CornerRadius="4">
                                            <StackPanel Orientation="Horizontal">
                                                <Button Command="{Binding ChangeSimulationStepSizeCommand}" CommandParameter="-1" Width="25" Height="25">
                                                    <icons:Icon Value="fa-solid fa-minus" FontSize="10"/>
                                                </Button>
                                                <Button Command="{Binding ChangeSimulationStepSizeCommand}" CommandParameter="1" Width="25" Height="25">
                                                    <icons:Icon Value="fa-solid fa-plus" FontSize="10"/>
                                                </Button>
                                            </StackPanel>
                                        </Border>
                                    </StackPanel>      
                                </StackPanel>
                                <StackPanel Grid.Column="2">
                                    <controls:RangeSliderControl Height="40" Margin="8,10" Minimum="-100" Maximum="100" 
                                                                 LowerValue="{Binding SelectedLowerFrequency}"
                                                                 UpperValue="{Binding SelectedUpperFrequency}"
                                                                 TickInterval="1"
                                                                 OnSelectionChangedCommand="{Binding UpdateFrequenciesCommand}"/>
                                    <Border Background="DimGray" BorderBrush="Black" BorderThickness="2" Padding="10,0"> 
                                        <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, 15">
                                            <CheckBox Grid.Column="0" Grid.RowSpan="2" Margin="0,0,15,0" IsChecked="{Binding LimitFrequencies}"/>
                                            <Slider Grid.Column="1" Grid.Row="0" TickFrequency="1" IsSnapToTickEnabled="True" Minimum="0"  
                                                    IsEnabled="{Binding LimitFrequencies}"
                                                    Maximum="{Binding FrequenciesAmount}"
                                                    Value="{Binding SelectedFrequenciesAmount}"/>
                                            <Label Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Center" Content="{Binding SelectedFrequenciesAmount, StringFormat='Only include the {0}-most important Frequencies'}"/>
                                        </Grid>
                                    </Border>
                                    <StackPanel Orientation="Horizontal" Margin="0,2" HorizontalAlignment="Center">
                                        <Label Content="Sort Phasors by:" />
                                        <ComboBox Margin="10,0,10,0" HorizontalAlignment="Stretch" SelectedIndex="0">
                                            <ComboBoxItem Content="descending magnitude"/>
                                            <ComboBoxItem Content="ascending angular velocity"/>
                                            <Interaction.Behaviors>
                                                <behaviors:ComboBoxSelectionChangedBehavior OnSelectionChangedCommand="{Binding SwitchPhasorSortingCommand}"/>
                                            </Interaction.Behaviors>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                    </Border>
                </StackPanel>
            </Grid>    
            <Border Margin="10">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Selected Frequency:" FontSize="20"/>
                        <DockPanel>
                            <Button DockPanel.Dock="Left" Command="{Binding ChangeSelectedFrequencyCommand}" CommandParameter="-1" IsEnabled="{Binding HasSelectedFrequency}"> 
                                <icons:Icon Value="fa-solid fa-arrow-left" FontSize="15"/>
                            </Button>
                            <Button DockPanel.Dock="Right" Command="{Binding ChangeSelectedFrequencyCommand}" CommandParameter="1" IsEnabled="{Binding HasSelectedFrequency}"> 
                                <icons:Icon Value="fa-solid fa-arrow-right" FontSize="15"/>
                            </Button>
                            <TextBox Width="50" Text="{Binding SelectedFrequency, Converter={StaticResource StringToNullableIntConverter}}"/>
                        </DockPanel>
                        <Label FontSize="20" Margin="20,0,0,0" Content="{Binding SelectedCoefficient}" />
                    </StackPanel>
                    <controls:BarChartControl Margin="5" SelectedBar="{Binding SelectedFrequency}" Points="{Binding MagnitudePlot}" Height="400" XAxisLabel="Frequenzy (hz)" YAxisLabel="Magnitude" ClipToBounds="True" Background="Beige"/>
                    <controls:BarChartControl Margin="5" SelectedBar="{Binding SelectedFrequency}" Points="{Binding PhasePlot}" Height="100" XAxisLabel="Frequenzy (hz)" YAxisLabel="Phase Offset (°)" ClipToBounds="True" Background="Beige" VerticalScale=".2"/>
                </StackPanel>
            </Border>
        </StackPanel>
    </ScrollViewer>
</UserControl>